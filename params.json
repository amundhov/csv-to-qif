{"name":"Csv-to-qif","tagline":"convert csv files to qif files","body":"# CSV To Qif\r\n\r\ntransform a wide range of csv files to qif files, with the main target to import them into [GnuCash](http://www.gnucash.org/).\r\n\r\n# Usage\r\n\r\nYou have to give `csv-to-qif` a lot of parameters, so it's best to create a bash script for every type of csv your bank will give you.\r\n\r\n    #!/bin/bash\r\n    \r\n    FILE=$1\r\n    NEW_FILE=/tmp/bank.tmp\r\n    CONFIG=parse.conf\r\n    OUTPUT=\"Active:Bank-Name:CreditCard.qif\"\r\n    SKIP=7\r\n    \r\n    iconv -t UTF-8 -f ISO-8859-15 $FILE > $NEW_FILE\r\n    \r\n    csv-to-qif --input=$NEW_FILE --output=$OUTPUT \\\r\n        --date=0 --text=3,4 --longtext=3,4,5 --balance=7 \\\r\n        --skip=$SKIP --separator=';' --updater=$CONFIG\r\n    \r\n    head -n $SKIP $FILE\r\n\r\n## Parameters\r\n\r\n### Mandatory\r\n\r\n* input : csv input file\r\n* output : qif file name to write to.\r\n* date : column of date of transaction\r\n* text : list of columns to create description from\r\n* longtext : same like text but for more information\r\n* balance : column of balance of transaction\r\n\r\n### optional\r\n\r\n* skip : how many lines to skip before reading\r\n* separator : default is `,`  it must be a char!\r\n\r\n### updater Parameter\r\n\r\nBecause some banks create descriptions that are _to detailed_.\r\nYou can create a updater configuration that will match for Strings and replaces the description (not the long description) with a replacement.\r\nThe format is `match`<->`replacement`\r\n\r\nExample updater file.\r\n\r\n    PayPal<->Bought Stuff at paypal\r\n    Your small shop says Thank you<->Bought stuff at Shop\r\n\r\nA file with this content\r\n\r\n    \"11.11.2011\",\"Transaction to PayPal\",\"Bottle of water\",\"-1000.00\"\r\n    \"12.11.2011\",\"Your small\",\"Your small shop says Thank you for buying stuff like Explosives\",\"-200000.00\"\r\n\r\nparsed without updater\r\n\r\n    $> csv-to-qif --input=foo.csv --output=foo.qif --date=0 --text=1,2 --longtext=1,2,3 --balance=3\r\n    $> cat foo.qif\r\n\r\n    !Type:Bank\r\n    PTransaction to PayPal Bottle of water\r\n    T-1000.00\r\n    D11.11.2011\r\n    MTransaction to PayPal Bottle of water -1000.00\r\n    ^\r\n    PYour small Your small shop says Thank you for buying stuff like Explosives\r\n    T-200000.00\r\n    D12.11.2011\r\n    MYour small Your small shop says Thank you for buying stuff like Explosives -200000.00\r\n    ^\r\nparsed with updater\r\n\r\n    $> csv-to-qif --input=foo.csv --output=foo-updated.qif --date=0 --text=1,2 --longtext=1,2,3 --balance=3 --updater=updater.conf\r\n    $> cat foo-updated.qif\r\n\r\n    !Type:Bank\r\n    PBought Stuff at paypal\r\n    T-1000.00\r\n    D11.11.2011\r\n    MTransaction to PayPal Bottle of water -1000.00\r\n    ^\r\n    PBought stuff at Shop\r\n    T-200000.00\r\n    D12.11.2011\r\n    MYour small Your small shop says Thank you for buying stuff like Explosives -200000.00\r\n    ^\r\n\r\n    \r\n\r\n# Install\r\n\r\n## using Cabal\r\n\r\n    $> cabal update\r\n    $> cabal install csv-to-qif\r\n\r\nshould do it.\r\n\r\n## from sources\r\n\r\nget the source\r\n\r\n    $> git clone  https://github.com/mrVanDalo/csv-to-qif.git\r\n    $> cd csv-to-qif\r\n\r\ninstall from source\r\n\r\n    $> cabal clean                      # just to be sure\r\n    $> cabal configure --enable-tests   # we want also the tests\r\n    $> cabal build                      # sure we want to build\r\n    $> cabal test && cabal install      # only install when tests are ok\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}